# Generated by Django 4.0.2 on 2022-07-07 10:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Nom de la société')),
                ('siret', models.CharField(default=None, max_length=32, null=True, unique=True, verbose_name='Numéro de Siret')),
                ('address', models.CharField(default=None, max_length=256, null=True, verbose_name="Adresse de l'entreprise")),
                ('activity', models.CharField(default='', max_length=256, verbose_name="Activite principale de l'entreprise")),
                ('ntva', models.CharField(default=None, max_length=32, null=True, unique=True, verbose_name='Numéro de TVA intra communautaire')),
                ('capital', models.FloatField(default=None, null=True, verbose_name="Capital de l'entreprise")),
                ('revenue', models.FloatField(default=None, null=True, verbose_name="Capital de l'entreprise")),
                ('size', models.IntegerField(default=0.0, verbose_name="Effectif de l'entreprise")),
                ('logo', models.CharField(default=None, max_length=256, null=True, verbose_name="Path du logo de l'entreprise")),
                ('webSite', models.CharField(default=None, max_length=256, null=True, verbose_name='Url du site Web')),
                ('starsST', models.IntegerField(default=0.0, verbose_name="Notation sous forme d'étoile")),
                ('starsPME', models.IntegerField(default=0.0, verbose_name="Notation sous forme d'étoile")),
                ('starsRecoST', models.IntegerField(default=0.0, verbose_name="Notation des recommandations sous forme d'étoile")),
                ('starsRecoPME', models.IntegerField(default=0.0, verbose_name="Notation des recommandations sous forme d'étoile")),
                ('companyPhone', models.CharField(default=None, max_length=128, null=True, verbose_name='Téléphone du standard')),
                ('companyMail', models.CharField(default=None, max_length=256, null=True, verbose_name='mail de la company')),
                ('amount', models.FloatField(default=None, null=True, verbose_name='Montant sous-traitant')),
                ('unity', models.CharField(default=None, max_length=64, null=True, verbose_name='Unité du montant')),
                ('latitude', models.FloatField(default=None, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(default=None, null=True, verbose_name='Longitude')),
                ('saturdayDisponibility', models.BooleanField(default=False, verbose_name='Disponibilité le Samedi')),
                ('allQualifications', models.BooleanField(default=False, verbose_name="Tous corps d'état")),
                ('stripeCustomerId', models.CharField(max_length=128, null=True, verbose_name='Customer ID générée par Stripe')),
            ],
            options={
                'verbose_name': 'Company',
            },
        ),
        migrations.CreateModel(
            name='DatePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date du chantier')),
                ('deleted', models.BooleanField(default=False, verbose_name='A été effacé')),
                ('validated', models.BooleanField(default=True, verbose_name='A été validé')),
            ],
            options={
                'verbose_name': 'DatePost',
            },
        ),
        migrations.CreateModel(
            name='DetailedPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(default=None, max_length=256, null=True, verbose_name='Détail de la prescription')),
                ('validated', models.BooleanField(default=False, verbose_name='Validation de la tache')),
                ('refused', models.BooleanField(default=False, verbose_name='Refus de validation de la tache')),
                ('DatePost', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='DateOfDetail', to='backBatiUni.datepost', verbose_name='Date associée')),
            ],
            options={
                'verbose_name': 'DetailedPost',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Nom du métier')),
            ],
            options={
                'verbose_name': 'Job',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=False, max_length=128, unique=True, verbose_name='Nom du label')),
                ('fileName', models.CharField(default='Unkown', max_length=128, unique=True, verbose_name='Nom du fichier Associé')),
                ('description', models.CharField(default='', max_length=2048, null=True, verbose_name='Description du métier')),
                ('site', models.CharField(default='', max_length=256, null=True, verbose_name='Site internet')),
            ],
            options={
                'verbose_name': 'Label',
            },
        ),
        migrations.CreateModel(
            name='LabelNew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=False, max_length=128, unique=True, verbose_name='Nom du label')),
                ('fileName', models.CharField(default='Unkown', max_length=128, unique=True, verbose_name='Nom du fichier Associé')),
                ('description', models.CharField(default='', max_length=2048, null=True, verbose_name='Description du métier')),
                ('site', models.CharField(default='', max_length=256, null=True, verbose_name='Site internet')),
            ],
            options={
                'verbose_name': 'Label',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Profil du compte')),
            ],
            options={
                'verbose_name': 'Role',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(default='Inconnu', max_length=128, verbose_name='Prénom')),
                ('lastName', models.CharField(default='Inconnu', max_length=128, verbose_name='Nom de famille')),
                ('proposer', models.IntegerField(default=None, null=True)),
                ('cellPhone', models.CharField(default=None, max_length=128, null=True, verbose_name='Téléphone mobile')),
                ('token', models.CharField(blank=True, default='empty token', max_length=512, null=True, verbose_name='Token de validation')),
                ('tokenNotification', models.CharField(blank=True, default='empty token', max_length=512, null=True, verbose_name='Token de validation')),
                ('email', models.CharField(blank=True, default='Inconnu', max_length=128, null=True, verbose_name='Email')),
                ('password', models.CharField(blank=True, default='Inconnu', max_length=128, null=True, verbose_name='Mot de passe')),
                ('function', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name="Fonction dans l'entreprise")),
                ('tokenFriend', models.CharField(blank=True, default='', max_length=128, null=True, verbose_name="Token pour invitation d'ami")),
                ('Company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='CompanyProfile', to='backBatiUni.company')),
                ('userNameInternal', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UserProfile',
            },
        ),
        migrations.CreateModel(
            name='Supervision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(default=None, max_length=256, null=True, verbose_name="Nom de l'auteur du message")),
                ('companyId', models.IntegerField(blank=True, default=None, verbose_name='Id de la companie emettrice')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date du suivi')),
                ('comment', models.CharField(default=None, max_length=4906, null=True, verbose_name='Commentaire sur le suivi')),
                ('DatePost', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='backBatiUni.datepost', verbose_name='Tâche associée')),
                ('DetailedPost', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='backBatiUni.detailedpost', verbose_name='Tâche associée')),
            ],
            options={
                'verbose_name': 'Supervision',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberOfPeople', models.IntegerField(default=1, verbose_name='Nombre de personne(s) demandées')),
                ('address', models.CharField(default=None, max_length=1024, null=True, verbose_name='Adresse du chantier')),
                ('latitude', models.FloatField(default=None, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(default=None, null=True, verbose_name='Longitude')),
                ('contactName', models.CharField(default=None, max_length=256, null=True, verbose_name='Nom du contact responsable de la mission')),
                ('draft', models.BooleanField(default=True, verbose_name='Brouillon ou validé')),
                ('manPower', models.BooleanField(default=True, verbose_name="Main d'oeuvre ou fourniture et pose")),
                ('creationDate', models.DateField(default=django.utils.timezone.now, verbose_name="Date de creation de l'annonce")),
                ('dueDate', models.DateField(default=None, null=True, verbose_name="Date de d'échéance de l'annonce")),
                ('startDate', models.DateField(default=None, null=True, verbose_name='Date de début de chantier')),
                ('endDate', models.DateField(default=None, null=True, verbose_name='Date de fin de chantier')),
                ('hourlyStart', models.CharField(default=None, max_length=128, null=True, verbose_name='Horaire de début de chantier')),
                ('hourlyEnd', models.CharField(default=None, max_length=128, null=True, verbose_name='Horaire de fin de chantier')),
                ('hourlyStartChange', models.CharField(default=None, max_length=128, null=True, verbose_name='Horaire de début de chantier proposé en modification')),
                ('hourlyEndChange', models.CharField(default=None, max_length=128, null=True, verbose_name='Horaire de fin de chantier proposé en modificatio')),
                ('amount', models.FloatField(default=0.0, verbose_name='Montant du chantier')),
                ('currency', models.CharField(default='€', max_length=128, null=True, verbose_name='Unité monétaire')),
                ('unitOfTime', models.CharField(default='Prix Journalier', max_length=128, null=True, verbose_name='Unité de temps')),
                ('counterOffer', models.BooleanField(default=False, verbose_name='Autoriser une contre offre')),
                ('description', models.CharField(default=None, max_length=4096, null=True, verbose_name='Description du chantier')),
                ('signedByCompany', models.BooleanField(default=False, verbose_name='Signature de la PME')),
                ('signedBySubContractor', models.BooleanField(default=False, verbose_name='Signature du ST')),
                ('subContractorContact', models.CharField(default=None, max_length=128, null=True, verbose_name='Contact chez le sous traitant')),
                ('subContractorName', models.CharField(default=None, max_length=128, null=True, verbose_name='Nom du sous traitant')),
                ('quality', models.IntegerField(default=0, verbose_name='Qualité du travail fourni')),
                ('qualityComment', models.TextField(default='', verbose_name='Qualité du travail fourni Commentaire')),
                ('security', models.IntegerField(default=0, verbose_name='Respect de la sécurité et de la propreté du chantier')),
                ('securityComment', models.TextField(default='', verbose_name='Respect de la sécurité et de la propreté du chantier Commentaire')),
                ('organisation', models.IntegerField(default=0, verbose_name='Organisation')),
                ('organisationComment', models.TextField(default='', verbose_name='Organisation Commentaire')),
                ('boostTimestamp', models.FloatField(default=0.0, verbose_name='Timestamp de mise à jour')),
                ('vibeST', models.IntegerField(default=0, verbose_name='Ambiance sur le chantier ST')),
                ('vibeCommentST', models.TextField(default='', verbose_name='Ambiance sur le chantier ST Commentaire')),
                ('securityST', models.IntegerField(default=0, verbose_name='Respect de la sécurité et de la propreté du chantier ST')),
                ('securityCommentST', models.TextField(default='', verbose_name='Respect de la sécurité et de la propreté du chantier ST Commentaire')),
                ('organisationST', models.IntegerField(default=0, verbose_name='Organisation')),
                ('organisationCommentST', models.TextField(default='', verbose_name='Organisation Commentaire')),
                ('paymentCondition', models.CharField(default=None, max_length=4096, null=True, verbose_name='Description du mode de paiement')),
                ('isClosed', models.BooleanField(default=False, verbose_name='Fin de la mission')),
                ('contract', models.IntegerField(default=None, null=True, verbose_name='Image du contrat')),
                ('Company', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='CompanyOfPost', to='backBatiUni.company', verbose_name='Société demandeuse')),
                ('Job', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='backBatiUni.job', verbose_name='Métier')),
            ],
            options={
                'verbose_name': 'Post',
            },
        ),
        migrations.CreateModel(
            name='InviteFriend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emailTarget', models.CharField(default='', max_length=256, verbose_name='email du destinataire')),
                ('token', models.CharField(default='', max_length=64, verbose_name='token')),
                ('date', models.DateField(default=None, null=True, verbose_name="Date de l'inscription")),
                ('invitationAuthor', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Author', to='backBatiUni.userprofile')),
                ('invitedUser', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Invited', to='backBatiUni.userprofile')),
            ],
            options={
                'verbose_name': 'InviteFriend',
            },
        ),
        migrations.AddField(
            model_name='detailedpost',
            name='Post',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Post', to='backBatiUni.post', verbose_name='Annonce associée'),
        ),
        migrations.AddField(
            model_name='datepost',
            name='Post',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PostDate', to='backBatiUni.post', verbose_name='Annonce associée'),
        ),
        migrations.AddField(
            model_name='company',
            name='Role',
            field=models.ForeignKey(default=3, on_delete=django.db.models.deletion.PROTECT, to='backBatiUni.role'),
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
            ],
            options={
                'verbose_name': 'Mission',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('backBatiUni.post',),
        ),
        migrations.CreateModel(
            name='ViewPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postId', models.IntegerField(blank=True, default=None, null=True, verbose_name='id du Post')),
                ('UserProfile', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='UserProfileforView', to='backBatiUni.userprofile')),
            ],
            options={
                'verbose_name': 'ViewPost',
                'unique_together': {('UserProfile', 'postId')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Role', models.CharField(default='PME', max_length=64, verbose_name='Rôle effectif durant la notation')),
                ('timestamp', models.FloatField(default=1657190156.245009, verbose_name='Timestamp de mise à jour')),
                ('content', models.CharField(default='', max_length=1024, verbose_name='Contenu du Post')),
                ('hasBeenViewed', models.BooleanField(default=False, verbose_name='A été vu')),
                ('nature', models.CharField(default='other', max_length=64, verbose_name='Nature de la notification')),
                ('category', models.CharField(default='other', max_length=64, verbose_name='Catégorie de la notification')),
                ('title', models.CharField(default='Titre par défaut', max_length=128, verbose_name='Nature de la notification')),
                ('Company', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='CompanyNotification', to='backBatiUni.company', verbose_name='Sous traitant associé')),
                ('Post', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='PostNotification', to='backBatiUni.post', verbose_name='Annonce associée')),
                ('subContractor', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='SubContractorAuthor', to='backBatiUni.company', verbose_name='Société destinatrice')),
                ('Mission', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='MissionNotification', to='backBatiUni.mission', verbose_name='Mission associée')),
            ],
            options={
                'verbose_name': 'Notification',
            },
        ),
        migrations.CreateModel(
            name='LabelForCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=None, null=True, verbose_name='Date de péremption')),
                ('Company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='CompanyLabel', to='backBatiUni.company')),
                ('Label', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backBatiUni.label')),
            ],
            options={
                'verbose_name': 'LabelForCompany',
                'unique_together': {('Label', 'Company')},
            },
        ),
        migrations.CreateModel(
            name='JobForCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=1, verbose_name='Nombre de profils ayant ce metier')),
                ('Company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='CompanyJob', to='backBatiUni.company')),
                ('Job', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backBatiUni.job')),
            ],
            options={
                'verbose_name': 'JobForCompany',
                'unique_together': {('Job', 'Company')},
            },
        ),
        migrations.CreateModel(
            name='FavoritePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postId', models.IntegerField(blank=True, default=None, null=True, verbose_name='id du Post')),
                ('UserProfile', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='UserProfileforFavorite', to='backBatiUni.userprofile')),
            ],
            options={
                'verbose_name': 'FavoritePost',
                'unique_together': {('UserProfile', 'postId')},
            },
        ),
        migrations.CreateModel(
            name='Disponibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=None, null=True, verbose_name='Date de disponibilité')),
                ('nature', models.CharField(default='Disponible', max_length=32, null=True, verbose_name='Disponibilité')),
                ('Company', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='CompanyDisponible', to='backBatiUni.company')),
            ],
            options={
                'verbose_name': 'Disponibility',
                'unique_together': {('Company', 'date')},
            },
        ),
        migrations.AddField(
            model_name='detailedpost',
            name='Mission',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Mission', to='backBatiUni.mission', verbose_name='Mission associée'),
        ),
        migrations.AddField(
            model_name='datepost',
            name='Mission',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MissionDate', to='backBatiUni.mission', verbose_name='Mission associée'),
        ),
        migrations.CreateModel(
            name='BlockedCandidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False, verbose_name='Status du bloqué')),
                ('date', models.DateField(default=None, null=True, verbose_name="Date de l'inscription")),
                ('blocked', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='blocked', to='backBatiUni.company', verbose_name='Company who is blocked')),
                ('blocker', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='blocking', to='backBatiUni.company', verbose_name='Company who is blocking')),
            ],
            options={
                'verbose_name': 'BlockedCandidate',
                'unique_together': {('blocker', 'blocked')},
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nature', models.CharField(default=False, max_length=128, verbose_name='nature du fichier')),
                ('name', models.CharField(default=False, max_length=128, verbose_name='Nom du fichier pour le front')),
                ('path', models.CharField(default=False, max_length=256, verbose_name='path')),
                ('ext', models.CharField(default=False, max_length=8, verbose_name='extension')),
                ('expirationDate', models.DateField(default=None, null=True, verbose_name='Date de péremption')),
                ('timestamp', models.FloatField(default=1657190156.247232, verbose_name='Timestamp de mise à jour')),
                ('Company', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='backBatiUni.company')),
                ('Post', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='selectPost', to='backBatiUni.post', verbose_name='Annonce associée')),
                ('Supervision', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='backBatiUni.supervision', verbose_name='Suivi associé')),
                ('Mission', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='selectMission', to='backBatiUni.mission', verbose_name='Mission associée')),
            ],
            options={
                'verbose_name': 'File',
                'unique_together': {('nature', 'name', 'Company', 'Post', 'Mission', 'Supervision')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='detailedpost',
            unique_together={('Post', 'Mission', 'DatePost')},
        ),
        migrations.AlterUniqueTogether(
            name='datepost',
            unique_together={('Post', 'Mission', 'date')},
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.CharField(default='', max_length=128, verbose_name='Le nom du contact')),
                ('isChoosen', models.BooleanField(default=False, null=True, verbose_name='Sous traitant selectionné')),
                ('isRefused', models.BooleanField(default=False, null=True, verbose_name='Sous traitant refusé')),
                ('isViewed', models.BooleanField(default=False, null=True, verbose_name='Candidature vue')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name="Date de candidature ou date d'acceptation")),
                ('amount', models.FloatField(default=0.0, verbose_name='Prix unitaire')),
                ('unitOfTime', models.CharField(default='Prix Total', max_length=128, null=True, verbose_name='Unité de temps')),
                ('Company', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='selecteCompany', to='backBatiUni.company', verbose_name='Sous-Traitant')),
                ('Post', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='backBatiUni.post', verbose_name='Annonce associée')),
                ('Mission', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='selectedMission', to='backBatiUni.mission', verbose_name='Mission associée')),
            ],
            options={
                'verbose_name': 'Candidate',
                'unique_together': {('Post', 'Mission', 'Company')},
            },
        ),
    ]
